// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`should render Temperature correctly 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Temperature />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": <form>
        <input
          checked={true}
          id="radio-f"
          readOnly={true}
          type="radio"
          value="F"
        />
        <label
          htmlFor="radio-f"
          onClick={[Function]}
        >
          Fahrenheit
        </label>
        <input
          checked={false}
          id="radio-c"
          readOnly={true}
          type="radio"
          value="C"
        />
        <label
          htmlFor="radio-c"
          onClick={[Function]}
        >
          Celsius
        </label>
      </form>,
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <input
            checked={true}
            id="radio-f"
            readOnly={true}
            type="radio"
            value="F"
          />,
          <label
            htmlFor="radio-f"
            onClick={[Function]}
          >
            Fahrenheit
          </label>,
          <input
            checked={false}
            id="radio-c"
            readOnly={true}
            type="radio"
            value="C"
          />,
          <label
            htmlFor="radio-c"
            onClick={[Function]}
          >
            Celsius
          </label>,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "checked": true,
            "id": "radio-f",
            "readOnly": true,
            "type": "radio",
            "value": "F",
          },
          "ref": null,
          "rendered": null,
          "type": "input",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "Fahrenheit",
            "htmlFor": "radio-f",
            "onClick": [Function],
          },
          "ref": null,
          "rendered": "Fahrenheit",
          "type": "label",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "checked": false,
            "id": "radio-c",
            "readOnly": true,
            "type": "radio",
            "value": "C",
          },
          "ref": null,
          "rendered": null,
          "type": "input",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "Celsius",
            "htmlFor": "radio-c",
            "onClick": [Function],
          },
          "ref": null,
          "rendered": "Celsius",
          "type": "label",
        },
      ],
      "type": "form",
    },
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <form>
          <input
            checked={true}
            id="radio-f"
            readOnly={true}
            type="radio"
            value="F"
          />
          <label
            htmlFor="radio-f"
            onClick={[Function]}
          >
            Fahrenheit
          </label>
          <input
            checked={false}
            id="radio-c"
            readOnly={true}
            type="radio"
            value="C"
          />
          <label
            htmlFor="radio-c"
            onClick={[Function]}
          >
            Celsius
          </label>
        </form>,
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <input
              checked={true}
              id="radio-f"
              readOnly={true}
              type="radio"
              value="F"
            />,
            <label
              htmlFor="radio-f"
              onClick={[Function]}
            >
              Fahrenheit
            </label>,
            <input
              checked={false}
              id="radio-c"
              readOnly={true}
              type="radio"
              value="C"
            />,
            <label
              htmlFor="radio-c"
              onClick={[Function]}
            >
              Celsius
            </label>,
          ],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "checked": true,
              "id": "radio-f",
              "readOnly": true,
              "type": "radio",
              "value": "F",
            },
            "ref": null,
            "rendered": null,
            "type": "input",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Fahrenheit",
              "htmlFor": "radio-f",
              "onClick": [Function],
            },
            "ref": null,
            "rendered": "Fahrenheit",
            "type": "label",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "checked": false,
              "id": "radio-c",
              "readOnly": true,
              "type": "radio",
              "value": "C",
            },
            "ref": null,
            "rendered": null,
            "type": "input",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Celsius",
              "htmlFor": "radio-c",
              "onClick": [Function],
            },
            "ref": null,
            "rendered": "Celsius",
            "type": "label",
          },
        ],
        "type": "form",
      },
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;
